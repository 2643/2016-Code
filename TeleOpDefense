          //made by Yvonne 
          
          
          frontRightMotor.set(yPosition-xPosition);
    	    backRightMotor.set(yPosition-xPosition);
    	    frontLeftMotor.set(yPosition+xPosition);
    	    backLeftMotor.set(yPosition+xPosition);
    	       
             
            if(gamePad.getRawButton(1))
            {
                    switch(state){
                    
                    
                   case portcullis:
                            //linear slide goes up and then slowly moves down and then robo moves forward
                            rightDriveEncoder.reset();
                            leftDriveEncoder.reset();
                            
                            defenseHooks.set(0.5);
                    if(slideEncoder.get() >= 200){
                            // encoder update later
                             defenseHooks.set(0.0);
                            
                             frontRightMotor.set(0.2);
                             frontLeftMotor.set(0.2);
                             backRightMotor.set(0.2);
                             backLeftMotor.set(0.2);
                             state = 1;
                            
                      
                    }
                    break;
                    
                    case 1:
                           
                            if(rightDriveEncoder.get() >= 200 && leftDriveEncoder.get() >= 200 ){
                                    defenseHooks.set(-0.4);
                                    if(slideEncoder.get() <= 50){
                                            defenseHooks.set(0.0); 
                                            state = arcadeDrivePortcullis;
                                            }
                                    }                
                    break;
                    
                    case arcadeDrivePortcullis: 
                            
                           double yPosition = gamePad.getY();
    	                   double xPosition = gamePad.getX();
    	    
    	                   frontRightMotor.set(yPosition-xPosition);
    	                   backRightMotor.set(yPosition-xPosition);
    	                   frontLeftMotor.set(yPosition+xPosition);
    	                   backLeftMotor.set(yPosition+xPosition);
        
                    break;
                                 }     
    
            }
            
            if(gamePad.getRawButton(2)){
                    switch(state){
                    
                    
                    case sallyPort:
                    	
                    		rightDriveEncoder.reset();
                            defenseHooks.set(-0.2);
                        //linear slides move down to hook the sally ports
                    if(slideEncoder.get() <= 150){
                            //encoder update later
                        defenseHooks.set(0.0);
                        //linear slides stop to hook it
                        frontRightMotor.set(-0.5);
                        frontLeftMotor.set(0.0);
                        backRightMotor.set(-0.5);
                        backLeftMotor.set(0.0);


                        //the right wheels move backwards to turn in a circle
                        state = 1;
                        }
                             
                    
                    break;
                    
                    case 1:
                            if(rightDriveEncoder.get() >= -150){
                            //encoder update later
                             frontRightMotor.set(0.0);
                             backRightMotor.set(0.0);
                             
                                  
                                state = arcadeDriveSallyPort;
                            }
                            break;
                            
                    case arcadeDriveSallyPort:
                    	   double yPosition = gamePad.getY();
    	                   double xPosition = gamePad.getX();
    	    
    	                   frontRightMotor.set(yPosition-xPosition);
    	                   backRightMotor.set(yPosition-xPosition);
    	                   frontLeftMotor.set(yPosition+xPosition);
    	                   backLeftMotor.set(yPosition+xPosition);
    	                   
                            break;
                 
                    }
            }
            
            if(gamePad.getRawButton(3)){
                    switch(state){
                    
                    case drawBridge:
                    	
                    		rightDriveEncoder.reset();
                    		leftDriveEncoder.reset();
                        
                            //linear slide goes down 
                                 defenseHooks.set(-0.2);
                    //wheels moves backwards while the the linear slide goes down 
                                 frontRightMotor.set(-0.2);
                                 frontLeftMotor.set(-0.2);
                                 backRightMotor.set(-0.2);
                                 backLeftMotor.set(-0.2);
                                 if(slideEncoder.get() <= 50 && rightDriveEncoder.get() >= 300 && leftDriveEncoder.get() >= 300){
                                 //update later
                                 defenseHooks.set(0.0);
                                 
                                 frontRightMotor.set(0.0);
                                 frontLeftMotor.set(0.0);
                                 backRightMotor.set(0.0);
                                 backLeftMotor.set(0.0);
                             state = 1;
                                 }
                                 break;
                                 
                    case 1:
                            //the linear slide still stays down and the wheels move forward
                             frontRightMotor.set(0.2);
                             frontLeftMotor.set(0.2);
                             backRightMotor.set(0.2);
                             backLeftMotor.set(0.2);
                             if(rightDriveEncoder.get() >= 120 && leftDriveEncoder.get() >= 120){
                                     //encoder update later 
                                     state = arcadeDriveDrawBridge;
                             }
                    break;
                    
                    case arcadeDriveDrawBridge:
                           double yPosition = gamePad.getY();
    	                   double xPosition = gamePad.getX();
    	    
    	                   frontRightMotor.set(yPosition-xPosition);
    	                   backRightMotor.set(yPosition-xPosition);
    	                   frontLeftMotor.set(yPosition+xPosition);
    	                   backLeftMotor.set(yPosition+xPosition);
                    break;
                    
                    }
            
                    }
    }
}
